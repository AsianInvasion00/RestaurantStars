<!doctype html>
<html lang="en">
	<head>
		<meta charset="utf-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1" />
		<meta name="description" content="A clean, responsive template for RestaurantStars — list restaurants, show ratings, and include a star-rating widget." />
		<meta name="theme-color" content="#0b5cff" />
		<title>RestaurantStars — Discover great restaurants</title>

		<!-- Open Graph -->
		<meta property="og:title" content="RestaurantStars" />
		<meta property="og:description" content="A clean, responsive template for RestaurantStars — list restaurants, show ratings, and include a star-rating widget." />
		<meta property="og:type" content="website" />

		<style>
			:root{
				--bg:#000000;
				--card:#ffffff;
				--muted:#6b7280;
				--accent:#0b5cff;
				--radius:12px;
				--glass: rgba(255,255,255,0.6);
				--max-width:1100px;
				font-family: Inter, Roboto, system-ui, -apple-system, "Segoe UI", "Helvetica Neue", Arial;
			}
			*{box-sizing:border-box}
			html,body{height:100%}
			body{
				margin:0;
				background: linear-gradient(180deg,#f5f7fb 0%, var(--bg) 100%);
				color:#111827;
				-webkit-font-smoothing:antialiased;
				-moz-osx-font-smoothing:grayscale;
				padding:28px 16px;
				display:flex;
				justify-content:center;
			}
			.container{width:100%;max-width:var(--max-width)}
			header{
				display:flex;align-items:center;justify-content:space-between;margin-bottom:20px
			}
			.brand{display:flex;align-items:center;gap:12px}
			.logo{
				width:44px;height:44px;border-radius:10px;background:var(--accent);display:flex;align-items:center;justify-content:center;color:#fff;font-weight:700;font-size:18px;box-shadow:0 6px 18px rgba(11,92,255,0.14)
			}
			nav a{color:var(--muted);text-decoration:none;margin-left:16px}

			.hero{
				background:linear-gradient(90deg, rgba(11,92,255,0.06), rgba(11,92,255,0.02));
				padding:28px;border-radius:var(--radius);display:flex;align-items:center;gap:20px;margin-bottom:20px;
			}
			.hero h1{margin:0;font-size:22px}
			.hero p{margin:6px 0 0;color:var(--muted)}

			.grid{display:grid;grid-template-columns:repeat(auto-fit,minmax(240px,1fr));gap:18px;margin-top:18px}
			.card{
				background:var(--card);border-radius:12px;padding:16px;box-shadow:0 6px 20px rgba(15,23,42,0.06);display:flex;flex-direction:column;gap:12px
			}
			.card h3{margin:0;font-size:16px}
			.meta{display:flex;justify-content:space-between;align-items:center;color:var(--muted);font-size:13px}

			.stars{display:inline-flex;gap:6px;align-items:center}
			.star{width:22px;height:22px;display:inline-grid;place-items:center;color:#f6b325;cursor:pointer}
			.rating-value{font-weight:700;color:#111827;margin-left:6px}

			footer{margin-top:28px;color:var(--muted);font-size:13px;text-align:center}

			/* small responsive tweaks */
			@media (max-width:520px){
				.hero{flex-direction:column;align-items:flex-start}
				.logo{width:40px;height:40px}
			}
		</style>
	</head>
	<body>
		<div class="container">
			<header>
				<div class="brand">
					<div class="logo">RS</div>
					<div>
						<div style="font-weight:700">RestaurantStars</div>
						<div style="font-size:12px;color:var(--muted)">Find, rate, and remember great restaurants</div>
					</div>
				</div>

				<nav aria-label="Main navigation">
					<a href="#">Home</a>
					<a href="#restaurants">Restaurants</a>
					<a href="#about">About</a>
				</nav>
			</header>

			<section class="hero" role="region" aria-labelledby="hero-title">
				<div>
					<h1 id="hero-title">Discover top local restaurants</h1>
					<p>Browse curated picks, see average ratings, and leave your own star review.</p>
				</div>
				<div style="margin-left:auto;display:flex;gap:8px;align-items:center">
					<button id="new-rest" style="background:var(--accent);color:#fff;border:0;padding:10px 14px;border-radius:10px;cursor:pointer">Add restaurant</button>
					<input id="search" placeholder="Search restaurants" style="padding:10px;border-radius:10px;border:1px solid #e6e9ef;min-width:160px" />
				</div>
			</section>

			<main>
				<section id="restaurants">
					<div style="display:flex;align-items:center;justify-content:space-between">
						<h2 style="margin:0">Popular near you</h2>
						<div style="color:var(--muted);font-size:13px">3 results</div>
					</div>

					<div class="grid" style="margin-top:12px">
						<!-- sample card -->
						<article class="card" data-id="1">
							<div style="display:flex;align-items:center;justify-content:space-between">
								<div>
									<h3>Blue Orchid Noodle Bar</h3>
									<div class="meta">Thai · $$ · <span>2.1 mi</span></div>
								</div>
								<div style="text-align:right">
									<div class="rating-value" aria-hidden="true">4.6</div>
									<div style="font-size:12px;color:var(--muted)">287 reviews</div>
								</div>
							</div>

							<div style="display:flex;align-items:center;justify-content:space-between">
								<div class="stars" role="img" aria-label="4.6 out of 5 stars">
									<span class="star" data-value="1">★</span>
									<span class="star" data-value="2">★</span>
									<span class="star" data-value="3">★</span>
									<span class="star" data-value="4">★</span>
									<span class="star" data-value="5">☆</span>
								</div>
								<button class="btn" style="background:transparent;border:1px solid #eef2ff;color:var(--accent);padding:6px 10px;border-radius:8px;cursor:pointer">View</button>
							</div>
						</article>

						<!-- second sample card -->
						<article class="card" data-id="2">
							<div style="display:flex;align-items:center;justify-content:space-between">
								<div>
									<h3>La Piazza Trattoria</h3>
									<div class="meta">Italian · $$$ · <span>0.6 mi</span></div>
								</div>
								<div style="text-align:right"><div class="rating-value">4.2</div><div style="font-size:12px;color:var(--muted)">114 reviews</div></div>
							</div>
							<div style="display:flex;align-items:center;justify-content:space-between">
								<div class="stars" role="img" aria-label="4.2 out of 5 stars">
									<span class="star">★</span>
									<span class="star">★</span>
									<span class="star">★</span>
									<span class="star">★</span>
									<span class="star">☆</span>
								</div>
								<button class="btn" style="background:transparent;border:1px solid #e6e9ef;color:var(--muted);padding:6px 10px;border-radius:8px;cursor:pointer">View</button>
							</div>
						</article>

						<!-- third sample card -->
						<article class="card" data-id="3">
							<div style="display:flex;align-items:center;justify-content:space-between">
								<div>
									<h3>Saffron Garden</h3>
									<div class="meta">Indian · $$ · <span>1.3 mi</span></div>
								</div>
								<div style="text-align:right"><div class="rating-value">3.9</div><div style="font-size:12px;color:var(--muted)">62 reviews</div></div>
							</div>
							<div style="display:flex;align-items:center;justify-content:space-between">
								<div class="stars" role="img" aria-label="3.9 out of 5 stars">
									<span class="star">★</span>
									<span class="star">★</span>
									<span class="star">★</span>
									<span class="star">☆</span>
									<span class="star">☆</span>
								</div>
								<button class="btn" style="background:transparent;border:1px solid #e6e9ef;color:var(--muted);padding:6px 10px;border-radius:8px;cursor:pointer">View</button>
							</div>
						</article>
					</div>
				</section>
			</main>

			<footer>
				Built with care · <a href="#about">About RestaurantStars</a>
			</footer>
		</div>

		<script>
			// Simple interactive star hover/click behaviour for the first card sample
			(function(){
				const card = document.querySelector('.card[data-id="1"]');
				if(!card) return;
				const stars = Array.from(card.querySelectorAll('.star'));
				const ratingValue = card.querySelector('.rating-value');

				let current = 4.6; // initial value in UI

				function renderHover(idx){
					stars.forEach((s,i)=>{
						s.textContent = i <= idx ? '★' : '☆';
					});
				}
				function resetStars(){
					// reflect current numeric value (round down for display)
					const filled = Math.round(current) - 1;
					renderHover(filled);
				}

				stars.forEach((s,i)=>{
					s.addEventListener('mouseenter', ()=> renderHover(i));
					s.addEventListener('click', ()=>{
						current = i+1;
						ratingValue.textContent = current.toFixed(1);
						resetStars();
						// In a real app you would POST this to your backend here
					});
				});
				card.addEventListener('mouseleave', resetStars);

				// initial render
				resetStars();
			})();
		</script>
	</body>
</html>
